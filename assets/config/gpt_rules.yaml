# GPTâ€‘Regeldatei  â€“  wird von gpt_service.dart (v5) geladen
# --------------------------------------------------------
# Jede Regel besteht aus:
#   trigger      â€“Â snake_caseÂ Name des Events (siehe _camelToSnake in GptService)
#   mode         â€“Â online | offline | hybrid  (falls leer => Settings entscheidet)
#   prompt       â€“Â Systemâ€‘Prompt fÃ¼r GPTÂ (Platzhalter:  {{field}})
#   avatar_react â€“Â none | celebrate | sad | speak(<text>)
#
# Platzhalter stehen in doppelt geschweiften Klammern und werden durch
# jsonEncode(evt) â†’ Mapâ€‘SchlÃ¼ssel ersetzt.

- trigger: meal_analyzed_event
  mode: online
  prompt: |
    Das Kind hat soeben eine Mahlzeit mit {{totalCarbs}}â€¯g Kohlenhydraten erfasst.
    ErklÃ¤re in zwei SÃ¤tzen, warum die geschÃ¤tzte KHâ€‘Menge sinnvoll sein kÃ¶nnte
    und gib einen kurzen Tipp zur genaueren SchÃ¤tzung.
  avatar_react: celebrate

- trigger: meal_warning_event
  mode: online
  prompt: |
    Folgende Warnungen wurden erkannt: {{warnings}}.
    Formuliere eine kindgerechte RÃ¼ckmeldung, wie die Mahlzeit verbessert
    werden kann, in hÃ¶chstens drei SÃ¤tzen.
  avatar_react: sad

- trigger: bolus_calculated_event
  mode: online
  prompt: |
    Es wurde eine Bolusâ€‘Empfehlung berechnet:
      â€¢ KH: {{carbs}}â€¯g
      â€¢ Insulin: {{units}}â€¯U
      â€¢ Ratio: {{ratio}}
    Gib eine sehr kurze RÃ¼ckfrage (max. 20â€¯WÃ¶rter), wenn die Menge ungewÃ¶hnlich
    erscheint â€“ ansonsten ein Lob.
  avatar_react: speak(ÃœberprÃ¼fe bitte die vorgeschlagene Insulinmenge.)

- trigger: parent_log_event
  mode: offline
  avatar_react: none
# gpt_rules.yaml  â€“Â Regeln fÃ¼r GptService  :contentReference[oaicite:1]{index=1}
# ---------------------------------------------------------------
# triggerâ€‘Namen = snake_case(Eventâ€‘Klasse)

- trigger: meal_analyzed_event
  mode: online
  prompt: |
    Das Kind hat soeben eine Mahlzeit mit {{totalCarbs}}â€¯g Kohlenhydraten erfasst.
    ErklÃ¤re in zwei SÃ¤tzen, warum die geschÃ¤tzte KHâ€‘Menge sinnvoll sein kÃ¶nnte
    und gib einen kurzen Tipp zur genaueren SchÃ¤tzung.
  avatar_react: celebrate

- trigger: meal_warning_event
  mode: online
  prompt: |
    Folgende Warnungen wurden erkannt: {{warnings}}.
    Formuliere eine kindgerechte RÃ¼ckmeldung (max. 3Â SÃ¤tze), wie die Mahlzeit
    verbessert werden kann.
  avatar_react: sad

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ğŸ†•  Bildâ€‘Pipeline  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# GPT MUSS exakt das JSONâ€‘Array liefern, das der ImageInputService erwartet!
- trigger: image_input_finished_event
  mode: online
  prompt: |
    Du erhÃ¤ltst ein Bildanalyseâ€‘Ergebnis im Feld {{items}}.
    Gib **genau dasselbe Array** unverÃ¤ndert zurÃ¼ck (JSONâ€‘Format), damit die
    Pipeline es weiterverarbeiten kann. Antworte **ohne** zusÃ¤tzliche Worte oder
    Markdown â€“ nur das Array.
  avatar_react: none

- trigger: image_input_failed_event
  mode: offline
  avatar_react: sad

- trigger: speech_input_failed_event
  mode: offline
  avatar_react: speak(Versuch es bitte noch einmal. Ich habe dich nicht verstanden.)

- trigger: bolus_calculated_event
  mode: online
  prompt: |
    Bolusvorschlag:
      â€¢ KH: {{carbs}}â€¯g
      â€¢ Insulin: {{units}}â€¯U
      â€¢ VerhÃ¤ltnis: {{ratio}}
    Gib eine RÃ¼ckfrage (<=Â 20â€¯WÃ¶rter), wenn Menge ungewÃ¶hnlich erscheint,
    sonst Lob.
  avatar_react: speak(ÃœberprÃ¼fe bitte die vorgeschlagene Insulinmenge.)

- trigger: parent_log_event
  mode: offline
  avatar_react: none
